// prisma/schema.prisma
datasource db {
    provider  = "postgresql"
    url  	    = env("DATABASE_URL")
    // uncomment next line if you use Prisma <5.10
    // directUrl = env("DATABASE_URL_UNPOOLED")
}

generator client {
    provider = "prisma-client-js"
}

model AidPoint {
    id          String @id @default(cuid())
    newsLinkId  String @unique // Added for linking to news updates and upserting
    name        String
    latitude    Float
    longitude   Float
    needs       String
    ngoLink     String
    category    String   // e.g., "hospital", "shelter", "aid_distribution"
    status      String   // e.g., "critical", "needs_supplies", "operational"
    description String?
    contactInfo     String? // Optional contact information
    capacity     Int? // Optional capacity for shelters or hospitals
    lastUpdated DateTime @default(now())
    createdAt   DateTime @default(now())

    @@map("aid_points")
}

model GazaTweetUser {
    id          String   @id @default(cuid())
    twitterId   String   @unique
    username    String
    displayName String
    tweets      GazaTweetUpdate[]
}

model GazaTweetHashtag {
    id        String   @id @default(cuid())
    tag       String   @unique
    tweets    GazaTweetUpdate[] @relation("TweetHashtags")
}

model GazaTweetUpdate {
    id            String   @id @default(cuid())
    tweetId       String   @unique
    text          String
    author        GazaTweetUser   @relation(fields: [authorId], references: [id])
    authorId      String
    createdAt     DateTime
    tweetUrl      String
    hashtags      GazaTweetHashtag[] @relation("TweetHashtags")
    rawJson       Json?
    fetchedAt     DateTime @default(now())
}